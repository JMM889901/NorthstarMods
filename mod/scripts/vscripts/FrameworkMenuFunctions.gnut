untyped
global function FrameworkMenuInit
global function InitEditTitanClassMenu
struct{
	array<var> activateButtons
} file
void function FrameworkMenuInit()
{
	AddMenu( "EditTitanClassMenu", $"resource/ui/menus/titanClasses.menu", InitEditTitanClassMenu )
	AddMenu( "PassiveSelectMenuAlt", $"resource/ui/menus/passiveselectAlt.menu", InitPassiveSelectMenuAlt )
	InitEditTitanClassMenu()
}
void function InitPassiveSelectMenuAlt()
{
	var menu = GetMenu( "PassiveSelectMenuAlt" )

	AddMenuEventHandler( menu, eUIEvent.MENU_OPEN, OnPassiveSelectMenuAlt_Open )
	//AddMenuEventHandler( menu, eUIEvent.MENU_CLOSE, OnPassiveSelectMenu_Close )

	AddEventHandlerToButtonClass( menu, "PassiveButton", UIE_GET_FOCUS, OnPassiveSelectButton_Focused )
	AddEventHandlerToButtonClass( menu, "PassiveButton", UIE_CLICK, OnAbilityOrPassiveSelectButton_Activate )
	//AddEventHandlerToButtonClass( menu, "PassiveSelectClass", UIE_LOSE_FOCUS, OnPassiveSelectButton_LostFocus )

	AddMenuFooterOption( menu, BUTTON_A, "#A_BUTTON_SELECT" )
	AddMenuFooterOption( menu, BUTTON_B, "#B_BUTTON_BACK", "#BACK" )
}
void function OnPassiveSelectMenuAlt_Open()
{
	Assert( uiGlobal.editingLoadoutType == "pilot" || uiGlobal.editingLoadoutType == "titan" )
	Assert( uiGlobal.editingLoadoutProperty == "passive1" || uiGlobal.editingLoadoutProperty == "passive2" || uiGlobal.editingLoadoutProperty == "passive3" || uiGlobal.editingLoadoutProperty == "passive4" || uiGlobal.editingLoadoutProperty == "passive5" || uiGlobal.editingLoadoutProperty == "passive6" )

	array<ItemDisplayData> unavailableItems

	string parentItemRef

		TitanLoadoutDef editLoadout = GetTitanEditLoadout()
		parentItemRef = editLoadout.titanClass
		string nonPrimeSetFile = GetSetFileForTitanClassAndPrimeStatus( editLoadout.titanClass, false )
		uiGlobal.editingItemType = GetItemTypeFromTitanLoadoutProperty( uiGlobal.editingLoadoutProperty, nonPrimeSetFile, editLoadout.titanClass )
		uiGlobal.editingItemRef = GetTitanLoadoutValue( editLoadout, uiGlobal.editingLoadoutProperty )

	var menu = GetMenu( "PassiveSelectMenuAlt" )
	var menuTitle = Hud_GetChild( menu, "MenuTitle" )
	array<var> buttons = GetElementsByClassname( menu, "PassiveSelectClass" )
	array<ItemDisplayData> items
	items = GetVisibleItemsOfType( uiGlobal.editingItemType, parentItemRef )

	Hud_SetText( menuTitle, GetDisplayNameFromItemType( uiGlobal.editingItemType ) )

	SetupLoadoutItemButtonsAlt( buttons, items, uiGlobal.editingItemRef, unavailableItems, parentItemRef )

	RefreshCreditsAvailable()
}
void function InitEditTitanClassMenu()
{
	print("Running titanClass menu init")
	var menu = GetMenu( "EditTitanClassMenu" )
	var dataTable = GetDataTable( $"datatable/default_titan_loadouts.rpak" )
	AddMenuEventHandler( menu, eUIEvent.MENU_OPEN, OnClassSelectMenu_Open )
	for ( int i = 0; i < 14; i++ )
	{
		var activateButton = Hud_GetChild( menu, "Button" + i )
		activateButton.s.rowIndex <- i
		Hud_SetVisible( activateButton, true )
		Hud_AddEventHandler( activateButton, UIE_CLICK, OnClassSelectButton_Activate )
		file.activateButtons.append(activateButton)
	}
}
void function OnClassSelectButton_Activate(var button)
{
	if(shouldPrintDevStuff())
		print(button.s.rowIndex)
	if(button.s.rowIndex > 6)
	{
		int index = expect int(button.s.rowIndex)
		OverwriteGlobalTitanLoadoutByIndex(uiGlobal.editingLoadoutIndex, GetModdedTitanByClassNoPersist(expect string(button.s.titanClass)), true)
		shGlobal.cachedTitanLoadouts[uiGlobal.editingLoadoutIndex].passive2 = GetAllItemsOfType(GetModdedTitanLoadoutPassiveTypeByClass(expect string(button.s.titanClass), "passive2"))[0].ref
		shGlobal.cachedTitanLoadouts[uiGlobal.editingLoadoutIndex].passive4 = GetAllItemsOfType(GetModdedTitanLoadoutPassiveTypeByClass(expect string(button.s.titanClass), "passive4"))[0].ref
		shGlobal.cachedTitanLoadouts[uiGlobal.editingLoadoutIndex].passive5 = GetAllItemsOfType(GetModdedTitanLoadoutPassiveTypeByClass(expect string(button.s.titanClass), "passive5"))[0].ref
		shGlobal.cachedTitanLoadouts[uiGlobal.editingLoadoutIndex].passive6 = GetAllItemsOfType(GetModdedTitanLoadoutPassiveTypeByClass(expect string(button.s.titanClass), "passive6"))[0].ref
		shGlobal.cachedTitanLoadouts[uiGlobal.editingLoadoutIndex].titanExecution = GetAllItemsOfType(GetModdedTitanLoadoutPassiveTypeByClass(expect string(button.s.titanClass), "titanExecution"))[0].ref

		ClientCommand( "SetTitanClass "+uiGlobal.editingLoadoutIndex+" modded " + (button.s.titanClass) )
	}
	else if (button.s.rowIndex > -1)
	{
		int index = expect int(button.s.rowIndex)
		OverwriteGlobalTitanLoadoutByIndex(uiGlobal.editingLoadoutIndex, GetDefaultTitanLoadout(expect int(button.s.rowIndex)), true)
		shGlobal.cachedTitanLoadouts[uiGlobal.editingLoadoutIndex].primeTitanRef = GetPrimeTitanRefForTitanClass( GetCachedTitanLoadout(index).titanClass )
		shGlobal.cachedTitanLoadouts[uiGlobal.editingLoadoutIndex].passive2 = GetDefaultTitanLoadout(index).passive2

		ClientCommand( "SetTitanClass "+uiGlobal.editingLoadoutIndex+" default " + button.s.rowIndex )
	}
	if(shouldPrintDevStuff())
		PrintTitanLoadout(shGlobal.cachedTitanLoadouts[uiGlobal.editingLoadoutIndex])
	//uiGlobal.editingLoadoutIndex
}
void function OnClassSelectMenu_Open()
{
	print("openning class select")
	var menu = GetMenu( "EditTitanClassMenu" )
	var dataTable = GetDataTable( $"datatable/default_titan_loadouts.rpak" )
	for ( int i = 0; i < 7; i++ )
	{
		var activateButton = Hud_GetChild( menu, "Button" + i )
		string name = GetDefaultTitanLoadout(i).name
		if ( IsTokenLoadoutName( name ) )
			RHud_SetText( activateButton, Localize( name ) )
		else
		RHud_SetText( activateButton, name )
		Hud_SetVisible( activateButton, true )
		Hud_SetEnabled( activateButton, true )		
	}
	for ( int i = 7; i < 7 + GetModdedTitanClasses().len(); i++)
	{
		var activateButton = Hud_GetChild( menu, "Button" + i )
		RHud_SetText( activateButton, Localize(GetModdedTitanClasses()[i-7]) )
		activateButton.s.titanClass <- GetModdedTitanClasses()[i-7]
		Hud_SetVisible( activateButton, true )
		Hud_SetEnabled( activateButton, true )
	}
	for ( int i = 7 + GetModdedTitanClasses().len(); i < 14; i++)
	{
		var activateButton = Hud_GetChild( menu, "Button" + i )
		Hud_SetVisible( activateButton, false )
		Hud_SetEnabled( activateButton, false )
	}
}

